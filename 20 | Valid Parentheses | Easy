//Using Stack
//O(n) Time Complexity
//O(n) Space Complexity
public class Solution {
    public bool IsValid(string s) {
        
        Stack stack = new Stack();
        
        for(int i = 0; i < s.Length; i++)
        {
            if(stack.Count == 0)
                stack.Push(s[i]);
            else
            {
                char topValue = (char)stack.Peek();
                switch(s[i])
                {
                    case ']' : if(topValue == '[') 
                                    stack.Pop();
                               else
                                    stack.Push(s[i]);
                        break;
                    case ')' : if(topValue == '(') 
                                    stack.Pop();
                               else
                                    stack.Push(s[i]);
                        break;
                    case '}' : if(topValue == '{') 
                                    stack.Pop();
                               else
                                    stack.Push(s[i]);
                        break;
                    default:
                       stack.Push(s[i]);
                        break;
                }
            }
        }
        
        if(stack.Count > 0)
            return false;
        else
            return true;
    }
}
